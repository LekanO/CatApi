{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/oludcie/WebstormProjects/react-cats-app/src/PhotoForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport * as yup from \"yup\";\nimport \"./PhotoForm.css\";\nimport { getPhotos, addPhoto, editPhoto } from \"./requests\";\nimport { observer } from \"mobx-react\";\nconst schema = yup.object({\n  name: yup.string().required(\"Name is required\"),\n  description: yup.string().required(\"Description is required\")\n});\n\nfunction PhotoForm({\n  photosStore,\n  edit,\n  selectedPhoto,\n  onSave\n}) {\n  _s();\n\n  const fileUpload = /*#__PURE__*/React.createRef();\n  const [photo, setPhoto] = useState(null);\n  const [fileName, setFileName] = useState(\"\");\n\n  const getAllPhotos = async () => {\n    const response = await getPhotos();\n    photosStore.setPhotos(response.data);\n  };\n\n  const handleSubmit = async evt => {\n    const isValid = await schema.validate(evt);\n\n    if (!isValid) {\n      return;\n    }\n\n    try {\n      let bodyFormData = new FormData();\n\n      if (!edit) {\n        bodyFormData.set(\"name\", evt.name);\n        bodyFormData.set(\"description\", evt.description);\n        bodyFormData.append(\"photo\", photo);\n        await addPhoto(bodyFormData);\n      } else {\n        bodyFormData.set(\"id\", selectedPhoto.id);\n        bodyFormData.set(\"name\", evt.name);\n        bodyFormData.set(\"description\", evt.description);\n\n        if (photo) {\n          bodyFormData.append(\"photo\", photo);\n        }\n\n        await editPhoto(bodyFormData);\n      }\n    } catch (error) {\n      alert(\"Upload must be an image\");\n    }\n\n    await getAllPhotos();\n    onSave();\n  };\n\n  const setFile = evt => {\n    setPhoto(evt.target.files[0]);\n    setFileName(evt.target.files[0].name);\n  };\n\n  const openUploadDialog = () => {\n    fileUpload.current.click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      validationSchema: schema,\n      onSubmit: handleSubmit,\n      initialValues: edit ? selectedPhoto : {},\n      children: ({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isInvalid,\n        errors\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: \"12\",\n            controlId: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"sub_id\",\n              placeholder: \"Name\",\n              value: values.sub_id || \"\",\n              onChange: handleChange,\n              isInvalid: touched.sub_id && errors.sub_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.sub_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: \"12\",\n            controlId: \"photo\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              ref: fileUpload,\n              name: \"photo\",\n              style: {\n                display: \"none\"\n              },\n              onChange: setFile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-box\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                onClick: openUploadDialog,\n                children: \"Upload Photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  paddingLeft: \"10px\",\n                  marginTop: \"5px\"\n                },\n                children: fileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          style: {\n            marginRight: \"10px\"\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PhotoForm, \"lchHrYexY9reKcEZAD4tQ8+ri6E=\");\n\n_c = PhotoForm;\nexport default _c2 = observer(PhotoForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PhotoForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/oludcie/WebstormProjects/react-cats-app/src/PhotoForm.js"],"names":["React","useEffect","useState","Formik","Form","Col","Button","yup","getPhotos","addPhoto","editPhoto","observer","schema","object","name","string","required","description","PhotoForm","photosStore","edit","selectedPhoto","onSave","fileUpload","createRef","photo","setPhoto","fileName","setFileName","getAllPhotos","response","setPhotos","data","handleSubmit","evt","isValid","validate","bodyFormData","FormData","set","append","id","error","alert","setFile","target","files","openUploadDialog","current","click","handleChange","handleBlur","values","touched","isInvalid","errors","sub_id","display","paddingLeft","marginTop","marginRight"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAO,iBAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,SAA9B,QAA+C,YAA/C;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,MAAMC,MAAM,GAAGL,GAAG,CAACM,MAAJ,CAAW;AACxBC,EAAAA,IAAI,EAAEP,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB,CADkB;AAExBC,EAAAA,WAAW,EAAEV,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB;AAFW,CAAX,CAAf;;AAIA,SAASE,SAAT,CAAmB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,IAAf;AAAqBC,EAAAA,aAArB;AAAoCC,EAAAA;AAApC,CAAnB,EAAiE;AAAA;;AAC/D,QAAMC,UAAU,gBAAGvB,KAAK,CAACwB,SAAN,EAAnB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACyB,QAAD,EAAWC,WAAX,IAA0B1B,QAAQ,CAAC,EAAD,CAAxC;;AACA,QAAM2B,YAAY,GAAG,YAAY;AAC/B,UAAMC,QAAQ,GAAG,MAAMtB,SAAS,EAAhC;AACAW,IAAAA,WAAW,CAACY,SAAZ,CAAsBD,QAAQ,CAACE,IAA/B;AACD,GAHD;;AAIA,QAAMC,YAAY,GAAG,MAAMC,GAAN,IAAa;AAChC,UAAMC,OAAO,GAAG,MAAMvB,MAAM,CAACwB,QAAP,CAAgBF,GAAhB,CAAtB;;AACA,QAAI,CAACC,OAAL,EAAc;AACZ;AACD;;AACD,QAAI;AACF,UAAIE,YAAY,GAAG,IAAIC,QAAJ,EAAnB;;AACA,UAAI,CAAClB,IAAL,EAAW;AACTiB,QAAAA,YAAY,CAACE,GAAb,CAAiB,MAAjB,EAAyBL,GAAG,CAACpB,IAA7B;AACAuB,QAAAA,YAAY,CAACE,GAAb,CAAiB,aAAjB,EAAgCL,GAAG,CAACjB,WAApC;AACAoB,QAAAA,YAAY,CAACG,MAAb,CAAoB,OAApB,EAA6Bf,KAA7B;AACA,cAAMhB,QAAQ,CAAC4B,YAAD,CAAd;AACD,OALD,MAKO;AACLA,QAAAA,YAAY,CAACE,GAAb,CAAiB,IAAjB,EAAuBlB,aAAa,CAACoB,EAArC;AACAJ,QAAAA,YAAY,CAACE,GAAb,CAAiB,MAAjB,EAAyBL,GAAG,CAACpB,IAA7B;AACAuB,QAAAA,YAAY,CAACE,GAAb,CAAiB,aAAjB,EAAgCL,GAAG,CAACjB,WAApC;;AACA,YAAIQ,KAAJ,EAAW;AACTY,UAAAA,YAAY,CAACG,MAAb,CAAoB,OAApB,EAA6Bf,KAA7B;AACD;;AACD,cAAMf,SAAS,CAAC2B,YAAD,CAAf;AACD;AACF,KAhBD,CAgBE,OAAOK,KAAP,EAAc;AACdC,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACD;;AACH,UAAMd,YAAY,EAAlB;AACEP,IAAAA,MAAM;AACP,GA1BD;;AA2BA,QAAMsB,OAAO,GAAGV,GAAG,IAAI;AACrBR,IAAAA,QAAQ,CAACQ,GAAG,CAACW,MAAJ,CAAWC,KAAX,CAAiB,CAAjB,CAAD,CAAR;AACAlB,IAAAA,WAAW,CAACM,GAAG,CAACW,MAAJ,CAAWC,KAAX,CAAiB,CAAjB,EAAoBhC,IAArB,CAAX;AACD,GAHD;;AAIA,QAAMiC,gBAAgB,GAAG,MAAM;AAC7BxB,IAAAA,UAAU,CAACyB,OAAX,CAAmBC,KAAnB;AACD,GAFD;;AAGA,sBACE;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,gBAAgB,EAAErC,MADpB;AAEE,MAAA,QAAQ,EAAEqB,YAFZ;AAGE,MAAA,aAAa,EAAEb,IAAI,GAAGC,aAAH,GAAmB,EAHxC;AAAA,gBAKG,CAAC;AACAY,QAAAA,YADA;AAEAiB,QAAAA,YAFA;AAGAC,QAAAA,UAHA;AAIAC,QAAAA,MAJA;AAKAC,QAAAA,OALA;AAMAC,QAAAA,SANA;AAOAC,QAAAA;AAPA,OAAD,kBASC,QAAC,IAAD;AAAM,QAAA,UAAU,MAAhB;AAAiB,QAAA,QAAQ,EAAEtB,YAA3B;AAAA,gCACE,QAAC,IAAD,CAAM,GAAN;AAAA,iCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAE5B,GAAhB;AAAqB,YAAA,EAAE,EAAC,IAAxB;AAA6B,YAAA,SAAS,EAAC,MAAvC;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,WAAW,EAAC,MAHd;AAIE,cAAA,KAAK,EAAE+C,MAAM,CAACI,MAAP,IAAiB,EAJ1B;AAKE,cAAA,QAAQ,EAAEN,YALZ;AAME,cAAA,SAAS,EAAEG,OAAO,CAACG,MAAR,IAAkBD,MAAM,CAACC;AANtC;AAAA;AAAA;AAAA;AAAA,oBAFF,eAUE,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,cAAA,IAAI,EAAC,SAA5B;AAAA,wBACGD,MAAM,CAACC;AADV;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAiBE,QAAC,IAAD,CAAM,GAAN;AAAA,iCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAEnD,GAAhB;AAAqB,YAAA,EAAE,EAAC,IAAxB;AAA6B,YAAA,SAAS,EAAC,OAAvC;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,GAAG,EAAEkB,UAFP;AAGE,cAAA,IAAI,EAAC,OAHP;AAIE,cAAA,KAAK,EAAE;AAAEkC,gBAAAA,OAAO,EAAE;AAAX,eAJT;AAKE,cAAA,QAAQ,EAAEb;AALZ;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,sCACE,QAAC,MAAD;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAsB,gBAAA,OAAO,EAAEG,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAM,gBAAA,KAAK,EAAE;AAAEW,kBAAAA,WAAW,EAAE,MAAf;AAAuBC,kBAAAA,SAAS,EAAE;AAAlC,iBAAb;AAAA,0BACGhC;AADH;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAoCE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,KAAK,EAAE;AAAEiC,YAAAA,WAAW,EAAE;AAAf,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAdJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4DD;;GAtGQ1C,S;;KAAAA,S;AAuGT,qBAAeP,QAAQ,CAACO,SAAD,CAAvB","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport * as yup from \"yup\";\nimport \"./PhotoForm.css\";\nimport { getPhotos, addPhoto, editPhoto } from \"./requests\";\nimport { observer } from \"mobx-react\";\nconst schema = yup.object({\n  name: yup.string().required(\"Name is required\"),\n  description: yup.string().required(\"Description is required\")\n});\nfunction PhotoForm({ photosStore, edit, selectedPhoto, onSave }) {\n  const fileUpload = React.createRef();\n  const [photo, setPhoto] = useState(null);\n  const [fileName, setFileName] = useState(\"\");\n  const getAllPhotos = async () => {\n    const response = await getPhotos();\n    photosStore.setPhotos(response.data);\n  };\n  const handleSubmit = async evt => {\n    const isValid = await schema.validate(evt);\n    if (!isValid) {\n      return;\n    }\n    try {\n      let bodyFormData = new FormData();\n      if (!edit) {\n        bodyFormData.set(\"name\", evt.name);\n        bodyFormData.set(\"description\", evt.description);\n        bodyFormData.append(\"photo\", photo);\n        await addPhoto(bodyFormData);\n      } else {\n        bodyFormData.set(\"id\", selectedPhoto.id);\n        bodyFormData.set(\"name\", evt.name);\n        bodyFormData.set(\"description\", evt.description);\n        if (photo) {\n          bodyFormData.append(\"photo\", photo);\n        }\n        await editPhoto(bodyFormData);\n      }\n    } catch (error) {\n      alert(\"Upload must be an image\");\n    }\n  await getAllPhotos();\n    onSave();\n  };\n  const setFile = evt => {\n    setPhoto(evt.target.files[0]);\n    setFileName(evt.target.files[0].name);\n  };\n  const openUploadDialog = () => {\n    fileUpload.current.click();\n  };\n  return (\n    <div>\n      <Formik\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n        initialValues={edit ? selectedPhoto : {}}\n      >\n        {({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          values,\n          touched,\n          isInvalid,\n          errors\n        }) => (\n          <Form noValidate onSubmit={handleSubmit}>\n            <Form.Row>\n              <Form.Group as={Col} md=\"12\" controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"sub_id\"\n                  placeholder=\"Name\"\n                  value={values.sub_id || \"\"}\n                  onChange={handleChange}\n                  isInvalid={touched.sub_id && errors.sub_id}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.sub_id}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col} md=\"12\" controlId=\"photo\">\n                <input\n                  type=\"file\"\n                  ref={fileUpload}\n                  name=\"photo\"\n                  style={{ display: \"none\" }}\n                  onChange={setFile}\n                />\n                <div className=\"file-box\">\n                  <Button type=\"button\" onClick={openUploadDialog}>\n                    Upload Photo\n                  </Button>\n                  <span style={{ paddingLeft: \"10px\", marginTop: \"5px\" }}>\n                    {fileName}\n                  </span>\n                </div>\n              </Form.Group>\n            </Form.Row>\n            <Button type=\"submit\" style={{ marginRight: \"10px\" }}>\n              Save\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\nexport default observer(PhotoForm);"]},"metadata":{},"sourceType":"module"}