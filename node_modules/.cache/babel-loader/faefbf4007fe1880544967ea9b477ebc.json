{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/oludcie/WebstormProjects/react-cats-app/src/PhotoForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport * as yup from \"yup\";\nimport \"./PhotoForm.css\";\nimport { getPhotos, addPhoto, editPhoto } from \"./requests\";\nimport { observer } from \"mobx-react\";\nimport history from '../src/history';\nconst schema = yup.object({\n  sub_id: yup.string().required(\"Sub_Id is required\")\n});\n\nfunction PhotoForm({\n  photosStore,\n  edit,\n  selectedPhoto,\n  onSave\n}) {\n  _s();\n\n  const fileUpload = /*#__PURE__*/React.createRef();\n  const [file, setPhoto] = useState(null);\n  const [fileName, setFileName] = useState(\"\");\n\n  const getAllPhotos = async () => {\n    const response = await getPhotos();\n    photosStore.setPhotos(response.data);\n  };\n\n  const handleSubmit = async evt => {\n    const isValid = await schema.validate(evt);\n\n    if (!isValid) {\n      return;\n    }\n\n    try {\n      let bodyFormData = new FormData();\n\n      if (!edit) {\n        bodyFormData.set(\"sub_id\", evt.sub_id);\n        bodyFormData.append(\"file\", file);\n        await addPhoto(bodyFormData);\n        history.push('/');\n      } else {\n        bodyFormData.set(\"id\", selectedPhoto.id);\n        bodyFormData.set(\"sub_id\", evt.sub_id);\n\n        if (file) {\n          bodyFormData.append(\"file\", file);\n        }\n\n        await editPhoto(bodyFormData);\n      }\n    } catch (error) {\n      alert(\"Upload must be an image\");\n    }\n\n    await getAllPhotos();\n    onSave();\n  };\n\n  const setFile = evt => {\n    setPhoto(evt.target.files[0]);\n    setFileName(evt.target.files[0].sub_id);\n  };\n\n  const openUploadDialog = () => {\n    fileUpload.current.click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      validationSchema: schema,\n      onSubmit: handleSubmit,\n      initialValues: edit ? selectedPhoto : {},\n      children: ({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isInvalid,\n        errors\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"containers\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"12\",\n              controlId: \"sub_id\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"sub_id\",\n                placeholder: \"Name\",\n                value: values.sub_id || \"\",\n                onChange: handleChange,\n                isInvalid: touched.name && errors.sub_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.sub_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"12\",\n              controlId: \"photo\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                ref: fileUpload,\n                name: \"file\",\n                style: {\n                  display: \"none\"\n                },\n                onChange: setFile\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-box\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  onClick: openUploadDialog,\n                  children: \"Upload Photo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    paddingLeft: \"10px\",\n                    marginTop: \"5px\"\n                  },\n                  children: fileName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            style: {\n              marginRight: \"10px\"\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PhotoForm, \"J4T64MMtTRAJb9U+Dxubjxa0Wvc=\");\n\n_c = PhotoForm;\nexport default _c2 = observer(PhotoForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PhotoForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/oludcie/WebstormProjects/react-cats-app/src/PhotoForm.js"],"names":["React","useEffect","useState","Formik","Form","Col","Button","yup","getPhotos","addPhoto","editPhoto","observer","history","schema","object","sub_id","string","required","PhotoForm","photosStore","edit","selectedPhoto","onSave","fileUpload","createRef","file","setPhoto","fileName","setFileName","getAllPhotos","response","setPhotos","data","handleSubmit","evt","isValid","validate","bodyFormData","FormData","set","append","push","id","error","alert","setFile","target","files","openUploadDialog","current","click","handleChange","handleBlur","values","touched","isInvalid","errors","name","display","paddingLeft","marginTop","marginRight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport * as yup from \"yup\";\nimport \"./PhotoForm.css\";\nimport { getPhotos, addPhoto, editPhoto } from \"./requests\";\nimport { observer } from \"mobx-react\";\nimport history  from '../src/history'\nconst schema = yup.object({\n    sub_id: yup.string().required(\"Sub_Id is required\"),\n});\nfunction PhotoForm({ photosStore, edit, selectedPhoto, onSave }) {\n  const fileUpload = React.createRef();\n  const [file, setPhoto] = useState(null);\n  const [fileName, setFileName] = useState(\"\");\n  const getAllPhotos = async () => {\n    const response = await getPhotos();\n    photosStore.setPhotos(response.data);\n  };\n  const handleSubmit = async evt => {\n    const isValid = await schema.validate(evt);\n    if (!isValid) {\n      return;\n    }\n    try {\n      let bodyFormData = new FormData();\n      if (!edit) {\n        bodyFormData.set(\"sub_id\", evt.sub_id);\n        bodyFormData.append(\"file\", file);\n        await addPhoto(bodyFormData);\n        history.push('/')\n      } else {\n        bodyFormData.set(\"id\", selectedPhoto.id);\n        bodyFormData.set(\"sub_id\", evt.sub_id);\n        if (file) {\n          bodyFormData.append(\"file\", file);\n        }\n        await editPhoto(bodyFormData);\n      }\n    } catch (error) {\n      alert(\"Upload must be an image\");\n    }\n  await getAllPhotos();\n    onSave();\n  };\n  const setFile = evt => {\n    setPhoto(evt.target.files[0]);\n    setFileName(evt.target.files[0].sub_id);\n  };\n  const openUploadDialog = () => {\n    fileUpload.current.click();\n  };\n  return (\n    <div>\n      <Formik\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n        initialValues={edit ? selectedPhoto : {}}\n      >\n        {({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          values,\n          touched,\n          isInvalid,\n          errors\n        }) => (\n            <div className=\"containers\">\n          <Form noValidate onSubmit={handleSubmit}>\n            <Form.Row>\n              <Form.Group as={Col} md=\"12\" controlId=\"sub_id\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"sub_id\"\n                  placeholder=\"Name\"\n                  value={values.sub_id || \"\"}\n                  onChange={handleChange}\n                  isInvalid={touched.name && errors.sub_id}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.sub_id}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col} md=\"12\" controlId=\"photo\">\n                <input\n                  type=\"file\"\n                  ref={fileUpload}\n                  name=\"file\"\n                  style={{ display: \"none\" }}\n                  onChange={setFile}\n                />\n                <div className=\"file-box\">\n                  <Button type=\"button\" onClick={openUploadDialog}>\n                    Upload Photo\n                  </Button>\n                  <span style={{ paddingLeft: \"10px\", marginTop: \"5px\" }}>\n                    {fileName}\n                  </span>\n                </div>\n              </Form.Group>\n            </Form.Row>\n            <Button type=\"submit\" style={{ marginRight: \"10px\" }}>\n              Save\n            </Button>\n          </Form>\n          </div>\n        )}\n      </Formik>\n    </div>\n  );\n}\nexport default observer(PhotoForm);"]},"metadata":{},"sourceType":"module"}