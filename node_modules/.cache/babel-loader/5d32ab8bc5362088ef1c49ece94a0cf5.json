{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/oludcie/WebstormProjects/react-cats-app/src/CatPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\";\nimport \"./HomePage.css\";\nimport PhotoForm from \"./PhotoForm\";\nimport Button from \"react-bootstrap/Button\";\nimport Table from \"react-bootstrap/Table\";\nimport { observer } from \"mobx-react\";\nimport { getPhotos, deletePhoto, APIURL } from \"./requests\";\n\nfunction CatPage({\n  photosStore\n}) {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [showEdit, setShowEdit] = useState(false);\n  const [initialized, setInitialized] = useState(false);\n  const [selectedPhoto, setSelectedPhoto] = useState({});\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleEditClose = () => setShowEdit(false);\n\n  const handleEditShow = photo => {\n    setSelectedPhoto(photo);\n    setShowEdit(true);\n  };\n\n  const getAllPhotos = async () => {\n    const response = await getPhotos();\n    photosStore.setPhotos(response.data);\n  };\n\n  const deletePhotoById = async id => {\n    await deletePhoto(id);\n    await getAllPhotos();\n  };\n\n  const onSave = () => {\n    setShow(false);\n    setShowEdit(false);\n  };\n\n  useEffect(() => {\n    if (!initialized) {\n      getAllPhotos();\n      setInitialized(true);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(PhotoForm, {\n      edit: false,\n      photosStore: photosStore,\n      onSave: onSave.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CatPage, \"Kh06vLAmYIQtfNQFLx97tuKpBe8=\");\n\n_c = CatPage;\nexport default _c2 = observer(CatPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CatPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/oludcie/WebstormProjects/react-cats-app/src/CatPage.js"],"names":["React","useState","useEffect","yup","PhotoForm","Button","Table","observer","getPhotos","deletePhoto","APIURL","CatPage","photosStore","show","setShow","showEdit","setShowEdit","initialized","setInitialized","selectedPhoto","setSelectedPhoto","handleClose","handleShow","handleEditClose","handleEditShow","photo","getAllPhotos","response","setPhotos","data","deletePhotoById","id","onSave","bind"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAO,gBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,MAAjC,QAA+C,YAA/C;;AACA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAAkC;AAAA;;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACkB,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,CAAC,EAAD,CAAlD;;AACA,QAAMoB,WAAW,GAAG,MAAMP,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAMQ,UAAU,GAAG,MAAMR,OAAO,CAAC,IAAD,CAAhC;;AACA,QAAMS,eAAe,GAAG,MAAMP,WAAW,CAAC,KAAD,CAAzC;;AACA,QAAMQ,cAAc,GAAGC,KAAK,IAAI;AAC9BL,IAAAA,gBAAgB,CAACK,KAAD,CAAhB;AACAT,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAHD;;AAIA,QAAMU,YAAY,GAAG,YAAY;AAC/B,UAAMC,QAAQ,GAAG,MAAMnB,SAAS,EAAhC;AACAI,IAAAA,WAAW,CAACgB,SAAZ,CAAsBD,QAAQ,CAACE,IAA/B;AACD,GAHD;;AAIA,QAAMC,eAAe,GAAG,MAAMC,EAAN,IAAY;AAClC,UAAMtB,WAAW,CAACsB,EAAD,CAAjB;AACA,UAAML,YAAY,EAAlB;AACD,GAHD;;AAIA,QAAMM,MAAM,GAAG,MAAM;AACnBlB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAHD;;AAIAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACe,WAAL,EAAkB;AAChBS,MAAAA,YAAY;AACZR,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,GALQ,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,IAAI,EAAE,KADR;AAEE,MAAA,WAAW,EAAEN,WAFf;AAGE,MAAA,MAAM,EAAEoB,MAAM,CAACC,IAAP,CAAY,IAAZ;AAHV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAvCQtB,O;;KAAAA,O;AAwCT,qBAAeJ,QAAQ,CAACI,OAAD,CAAvB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\";\nimport \"./HomePage.css\";\nimport PhotoForm from \"./PhotoForm\";\nimport Button from \"react-bootstrap/Button\";\nimport Table from \"react-bootstrap/Table\";\nimport { observer } from \"mobx-react\";\nimport { getPhotos, deletePhoto, APIURL } from \"./requests\";\nfunction CatPage({ photosStore }) {\n  const [show, setShow] = useState(false);\n  const [showEdit, setShowEdit] = useState(false);\n  const [initialized, setInitialized] = useState(false);\n  const [selectedPhoto, setSelectedPhoto] = useState({});\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const handleEditClose = () => setShowEdit(false);\n  const handleEditShow = photo => {\n    setSelectedPhoto(photo);\n    setShowEdit(true);\n  };\n  const getAllPhotos = async () => {\n    const response = await getPhotos();\n    photosStore.setPhotos(response.data);\n  };\n  const deletePhotoById = async id => {\n    await deletePhoto(id);\n    await getAllPhotos();\n  };\n  const onSave = () => {\n    setShow(false);\n    setShowEdit(false);\n  };\n  useEffect(() => {\n    if (!initialized) {\n      getAllPhotos();\n      setInitialized(true);\n    }\n  });\n  return (\n    <div className=\"container\">\n      <PhotoForm\n        edit={false}\n        photosStore={photosStore}\n        onSave={onSave.bind(this)}\n      />\n    </div>\n  );\n}\nexport default observer(CatPage);"]},"metadata":{},"sourceType":"module"}